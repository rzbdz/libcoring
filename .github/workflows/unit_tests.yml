name: Unit_Tests

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: essential
        run: |
          sudo apt-get update
          sudo apt install gcc-11 g++-11
      - name: Install googletest manually
        run: |
          wget https://github.com/google/googletest/archive/release-1.10.0.tar.gz
          tar xf release-1.10.0.tar.gz
          (cd googletest-release-1.10.0 &&
          cmake . &&
          sudo make install)
      - name: Install liburing manually
        run: |
          git clone https://github.com/axboe/liburing.git
          cd ./liburing
          sudo make install
      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        env:
          CC: gcc-11
          CXX: g++-11
        #- name: Build
        # Build your program with the given configuration
        #run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Make Tests
        run: cd ${{github.workspace}}/build/test && make unit_tests
      - name: Run Tests
        run: ${{github.workspace}}/build/test/unit_tests
